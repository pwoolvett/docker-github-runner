name: Publish Docker image

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches:
      - '**'
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - base_image: nvcr.io/nvidia/l4t-base:r32.4.4
           arch: arm64
         - base_image: nvcr.io/nvidia/deepstream-l4t:5.0.1-20.09-samples
           arch: arm64
    steps:

      - name: Define final image name
        run: |
          export MATRIX_BASE_RAW=${{ matrix.base_image }} \
          && export MATRIX_BASE=${MATRIX_BASE_RAW//:/_} \
          && echo "IMAGE_NAME=ghcr.io/${{ github.repository }}-${MATRIX_BASE##*/}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_NAME }}
          tag-sha: true # add git short SHA as Docker tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Buildx layers and apt 
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache
            /var/cache/apt
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-

      - name: Push Docker image to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          build-args: |
            FROM=${{ matrix.base_image }}
            RUNNER_OS=linux
            RUNNER_ARCH=${{ matrix.arch }}
          context: docker
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=${IMAGE_NAME}
          cache-to: |
            type=local,dest=/tmp/.buildx-cache,mode=max
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
